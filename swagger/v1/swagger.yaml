---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/posts":
    get:
      summary: Retrieve posts
      tags:
      - Posts
      parameters:
      - name: page
        in: query
        schema:
          type: string
      - name: per_page
        in: query
        schema:
          type: string
      responses:
        '200':
          description: Posts found
          content:
            application/json:
              examples:
                all posts:
                  value:
                    posts:
                    - id: 554
                      kind: quoted
                      user_id: 364
                      username: one
                      quote: quote two
                      original_post_id: 552
                      original_content: content two
                      original_user_id: 365
                      original_username: two
                    - id: 553
                      kind: repost
                      user_id: 366
                      username: three
                      original_post_id: 551
                      original_content: content one
                      original_user_id: 364
                      original_username: one
                    - id: 552
                      kind: original
                      content: content two
                      user_id: 365
                      username: two
                    meta:
                      total: 4
                      page: 1
                      per_page: 3
        '400':
          description: Invalid params
          content:
            application/json:
              examples:
                invalid pagination:
                  value:
                    page:
                    - must be greater than or equal to 1
                    per_page:
                    - must be greater than or equal to 1
    post:
      summary: Create post
      tags:
      - Posts
      parameters: []
      responses:
        '201':
          description: Post created
          content:
            application/json:
              examples:
                original post:
                  value:
                    post:
                      id: 555
                      kind: original
                      content: original content
                repost:
                  value:
                    post:
                      id: 556
                      kind: repost
                      user_id: 98
                      original_post_id: 90
                quoted post:
                  value:
                    post:
                      id: 557
                      kind: quoted
                      user_id: 97
                      quote: some quote
                      original_post_id: 93
        '400':
          description: Invalid params
          content:
            application/json:
              examples:
                invalid kind:
                  value:
                    kind:
                    - is not included in the list
                    original_post_id:
                    - can't be blank
                missing content:
                  value:
                    content:
                    - can't be blank
                invalid content:
                  value:
                    content:
                    - is too long (maximum is 777 characters)
        '422':
          description: Unprocessable entity
          content:
            application/json:
              examples:
                user not found:
                  value:
                    user:
                    - user not found
                original post not found:
                  value:
                    original_post:
                    - original post not found
                post quota exceeded:
                  value:
                    post:
                    - post quota exceeded
      requestBody:
        content:
          application/json:
            schema:
              properties:
                user_id:
                  type: string
                content:
                  type: string
                kind:
                  type: string
              required:
              - user_id
  "/api/v1/users/{id}":
    get:
      summary: Retrieve user profile
      tags:
      - User Profile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User profile found
          content:
            application/json:
              examples:
                user profile:
                  value:
                    id: 367
                    username: username
                    joined_at: March 25, 2021
        '400':
          description: Invalid param
          content:
            application/json:
              examples:
                invalid user id:
                  value:
                    id:
                    - must be greater than or equal to 1
        '422':
          description: User not found
          content:
            application/json:
              examples:
                user not found:
                  value:
                    user:
                    - user not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000/
